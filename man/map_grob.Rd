% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/map_grob.R
\name{map_grob}
\alias{map_grob}
\title{Purrr style map across categories with grobs.}
\usage{
map_grob(.data, .f, by, values, ...)
}
\arguments{
\item{.data}{A data frame to map. Must include columns referred to in \code{by} and \code{values}.}

\item{.f}{A function to apply to groupings of .data (grouped by \code{by}).}

\item{by}{The name of the grouping variable.}

\item{values}{The name of the value variable to pass to \code{f}}

\item{...}{Any additional parameters to pass to \code{f}.}
}
\value{
A \code{\link[grid:grid.grob]{grid::gList()}} of \code{\link[grid:grid.grob]{grid::grob()}} that result from calling \code{f} from \code{X$values}, grouped
by \code{X$by}.
}
\description{
A function similar to \code{\link[dplyr:group_map]{dplyr::group_map()}}, but returning
a grob list (\code{\link[grid:grid.grob]{grid::gList()}}).
}
\details{
The map-style functions are great for applying a function across
a series of data, particularly the \code{\link[dplyr:group_map]{dplyr::group_map()}}.

This function wraps \code{\link[dplyr:group_map]{dplyr::group_map()}}, so that a \code{\link[grid:grid.grob]{grid::gList()}} is returned
for use in grob-related functions. So the class of the list is set to gList,
as is done in the \code{\link[grid:grid.grob]{grid::gList()}} function.

A mapped function is expected to take two fixed parameters, the grouped data frame
and a tibble representing the group_by variable names. The function must also take
a \code{x} parameter that specifies the x variable (assuming the y is the group_by variable).
}
\note{
The \code{by} must be a factor, since we extract the
numeric value currently to use in the called function. The assumption
would be that \code{by} will represent a coordinate within the grob (though
it's not required to).
}
